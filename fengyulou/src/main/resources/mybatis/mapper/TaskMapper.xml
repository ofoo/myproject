<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guoguo.fengyulou.dao.TaskDao">

    <resultMap id="TaskResult" type="Task">
        <result property="id" column="id"/>
        <result property="sketch" column="sketch"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="project" column="project"/>
        <result property="userId" column="user_id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="finishTime" column="finish_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="TaskVoResult" type="TaskVo" extends="TaskResult">
        <result property="userName" column="name"/>
    </resultMap>

    <sql id="fengyulou_task_columns">
		fengyulou_task.id,
		fengyulou_task.sketch,
		fengyulou_task.type,
		fengyulou_task.status,
		fengyulou_task.project,
		fengyulou_task.user_id,
		fengyulou_task.create_user_id,
		fengyulou_task.create_time,
		fengyulou_task.update_time
	</sql>

    <sql id="fengyulou_task_properties">
		#{id},
		#{sketch},
		#{type},
		#{status},
		#{project},
		#{userId},
		#{createUserId},
		now(),
		now()
	</sql>

    <insert id="addTask" useGeneratedKeys="true" keyProperty="id">
        insert into fengyulou_task(<include refid="fengyulou_task_columns"/>)
        value(<include refid="fengyulou_task_properties"/>)
    </insert>

    <update id="updateTask">
        update fengyulou_task set
        sketch=#{sketch},
        `type`=#{type},
        status=#{status},
        project=#{project},
        user_id=#{userId},
        <if test="status==2">
            finish_time=now(),
        </if>
        update_time=now()
        where id=#{id}
    </update>

    <update id="updateTaskStatus">
        update fengyulou_task set status=#{status},update_time=now() where id=#{id}
    </update>

    <update id="updateTaskUserId">
        update fengyulou_task set user_id=#{userId},update_time=now() where id=#{id}
    </update>

    <delete id="deleteTask">
        delete from fengyulou_task
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getTaskList" resultMap="TaskVoResult">
        select
        ft.id,
        ft.sketch,
        ft.type,
        ft.status,
        ft.project,
        ft.user_id,
        fu.`name`
        from fengyulou_task ft
        left join fengyulou_user fu on fu.id=ft.user_id
        <where>
            and (user_id=#{createUserId} or create_user_id=#{createUserId})
            <if test="sketch!=null">
                and sketch like CONCAT('%',#{sketch},'%')
            </if>
            <if test="type!=null">
                and `type`=#{type}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
            <if test="project!=null">
                and project=#{project}
            </if>
            <if test="sketch!=null">
                and fengyulou like CONCAT('%',#{sketch},'%')
            </if>
        </where>
    </select>

    <select id="getTaskByIdAndCreateUserId" resultMap="TaskVoResult">
        select
        ft.id,
        ft.sketch,
        ft.type,
        ft.status,
        ft.project,
        ft.user_id,
        fu.`name`
        from fengyulou_task ft
        left join fengyulou_user fu on fu.id=ft.user_id
        where ft.id=#{id}
        and ft.create_user_id=#{createUserId}
    </select>

    <select id="getTaskIdsByIdsAndCreateUserId" resultType="java.lang.Long">
        select id from fengyulou_task where create_user_id=#{createUserId}
        and id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getTaskIdsByCreateUserId" resultType="java.lang.Long">
        select id from fengyulou_task where create_user_id=#{createUserId} and status=1
    </select>

    <select id="getTaskCountByIdAndCreateUserId" resultType="java.lang.Integer">
        select ifnull(count(1),0) from fengyulou_task where id=#{id} and create_user_id=#{createUserId}
    </select>
</mapper>